package blender.distributed.Cliente.view;

import blender.distributed.Cliente.controller.Controller;

import javax.swing.*;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;

import static java.lang.Integer.valueOf;
/**/
//Generated by GuiGenie - Copyright (c) 2004 Mario Awad.
//Home Page http://guigenie.cjb.net - Check often for new versions!


public class GUICliente extends JPanel implements ActionListener  {
  private JButton btnChooser;
  private JButton btnStart;
  private JTextField startFrame;
  private JLabel labelStartFrame;
  private JTextField endFrame;
  private JLabel labelEndFrame;
  private JFileChooser fc;
  JFrame frame;
  Controller controlador;

	public GUICliente(Controller controlador){
		this.controlador = controlador;
		frame = new JFrame ("Renderizado distribuido");
	    frame.setDefaultCloseOperation (JFrame.EXIT_ON_CLOSE);
        Dimension dimension = Toolkit.getDefaultToolkit().getScreenSize();
        int x = (int) ((dimension.getWidth() - frame.getWidth())/5);
        int y = (int) ((dimension.getHeight() - frame.getHeight())/5);
        frame.setLocation(x, y);
        
   	 //construct preComponents
	      //construct components
	      btnChooser = new JButton ("Cargar Archivo");
	      btnChooser.addActionListener(this);
	      btnStart = new JButton ("Empezar a renderizar");
	      btnStart.addActionListener(this);
	      btnStart.setEnabled(false);
	      startFrame =  new JFormattedTextField(valueOf(1));
	      labelStartFrame = new JLabel ("Frame Inicial:");
	      endFrame =  new JFormattedTextField(valueOf(100));
	      labelEndFrame = new JLabel ("Frame Final:");

	      //adjust size and set layout
	      setPreferredSize (new Dimension (372, 266));
	      setLayout (null);
	      //add components
	      add (btnChooser);
	      add (btnStart);
	      add (startFrame);
	      add (labelStartFrame);
	      add (endFrame);
	      add (labelEndFrame);
	      //set component bounds (only needed by Absolute Positioning)
	      btnChooser.setBounds (15, 10, 180, 40);
	      btnStart.setBounds (15, 220, 170, 40);
	      startFrame.setBounds (195, 120, 170, 25);
	      labelStartFrame.setBounds (15, 120, 170, 25);
	      endFrame.setBounds (195, 155, 170, 25);
	      labelEndFrame.setBounds (15, 155, 180, 25);
        
	      frame.getContentPane().add(this);
	      frame.pack();
	      frame.setVisible (true);
	      //Create a file chooser
	      fc = new JFileChooser();    
	}
	public void actionPerformed(ActionEvent e) {
		 if (e.getSource() == this.btnChooser) {
			fc = new JFileChooser();
			FileFilter filter = new FileNameExtensionFilter("Blender File","blend");
			this.fc.setFileFilter(filter);
			this.fc.setCurrentDirectory(new File("./proyectos/"));
			int returnVal = this.fc.showOpenDialog(null);
	        if (returnVal == JFileChooser.APPROVE_OPTION) {
	        	this.controlador.setFile(fc.getSelectedFile());
	        }
		 }
		 if (e.getSource() == this.btnStart) {
			 int startFrame = valueOf(this.startFrame.getText().replace(".", ""));
			 int endFrame = valueOf(this.endFrame.getText().replace(".", ""));
			
			 if(startFrame > 0) {
				 if(startFrame > endFrame) {
					 JOptionPane.showMessageDialog(null, "ERROR: El frame inicial no puede ser mayor al frame final.");
				 }else {
					 this.frame.setTitle("Procesando...");
					 String str = this.controlador.enviarFile(startFrame,endFrame);
					 this.frame.setTitle("Renderizado Distribuido");
					 JOptionPane.showMessageDialog(null,"Guardado en:\n"+str);
				 }
			 }else {
				 JOptionPane.showMessageDialog(null, "ERROR: El frame inicial debe ser mayor a 0.");
			 }
		 }
		 if(this.controlador.isReady())
			 this.btnStart.setEnabled(true);
		 else
			 this.btnStart.setEnabled(false);
		       
	 }
}